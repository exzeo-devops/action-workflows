name: Deploy Serverless

on:
  workflow_call:
    inputs:
      go-version:
        type: string
        description: "Version of golang"
        default: "1.21.x"
      build-args:
        type: string
        description: "Any go build args"
      environment:
        required: true
        type: string
        description: "Environment name"
      role-arn:
        required: true
        type: string
        description: "Role ARN to assume role"

jobs:
  deploy:
    name: "Deploy"
    runs-on: self-hosted
    environment: "${{ inputs.environment }}"

    permissions:
      id-token: write
      contents: read    

    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: ${{ inputs.go-version }}

      - name: Test Run
        run: |
          echo "Environment: ${{ inputs.environment }}"
          echo "Role ARN: ${{ secrets.ROLE_ARN }}"

      - name: Install dependencies
        run: | 
          go mod download
          go mod tidy
          go mod vendor

      - name: Install required dependencies
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@55d79496019a560e16e73e1948dee20a1fad631a # v2.18.2
          go install gotest.tools/gotestsum@ec99a250836f069a524bb9d9b5de0a7a96334ea7 # v1.11.0
          go install golang.org/x/vuln/cmd/govulncheck@da4b74a5408a0116e9a2dde953659a7b0956dc56 # v1.0.1
          go install github.com/zricethezav/gitleaks/v8@dab7d0292ad7ebc52c7adfcad755f92e2f7c9a9a # v8.18.1

      - name: Run gitleaks (Scan for hard-coded secrets in git repository)
        run: gitleaks detect --verbose

      - name: Run GoSec (Golang code issues)
        run: gosec ./...

      - name: Run govulncheck (Golang CLI issues)
        run: govulncheck ./...

      - name: Test
        run: gotestsum --format github-actions --no-color --format-hide-empty-pkg

      - name: Build
        shell: bash
        run: go build ${{ inputs.build-args }}

      - name: Assume Role
        # if: ${{ github.ref == 'refs/heads/main' }}
        uses: exzeo-devops/action-workflows/.github/actions/aws-assume-role@main
        with:
          role-arn: ${{ secrets.ROLE_ARN }}
          audience: ${{ secrets.AWS_OIDC_AUDIENCE }}    

      # - name: Deploy Serverless
      #   if: ${{ github.ref == 'refs/heads/main' }}
      #   uses: exzeo-devops/action-workflows/.github/actions/deploy-serverless@main