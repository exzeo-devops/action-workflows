name: Deploy Serverless

on:
  workflow_call:
    inputs:
      go-version:
        type: string
        description: "Version of golang"
        default: "1.21.x"
      build-args:
        type: string
        description: "Any go build args"
      environment:
        required: true
        type: string
    secrets:
      AWS_OIDC_AUDIENCE:
        required: true

env:
  ROLE_ARN: "${{ vars.ROLE_ARN }}"

jobs:
  deploy:
    name: "Deploy Serverless"
    runs-on: self-hosted
    environment: "${{ inputs.environment }}"

    permissions:
      id-token: write
      contents: read    

    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: ${{ inputs.go-version }}

      - name: Install dependencies
        run: | 
          if make -n init >/dev/null 2>&1; then
            make init
          else
            go mod download
            go mod tidy
            go mod vendor
          fi            

      - name: Install required dependencies
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@55d79496019a560e16e73e1948dee20a1fad631a # v2.18.2
          go install gotest.tools/gotestsum@ec99a250836f069a524bb9d9b5de0a7a96334ea7 # v1.11.0
          go install golang.org/x/vuln/cmd/govulncheck@da4b74a5408a0116e9a2dde953659a7b0956dc56 # v1.0.1
          go install github.com/zricethezav/gitleaks/v8@dab7d0292ad7ebc52c7adfcad755f92e2f7c9a9a # v8.18.1

      - name: Run gitleaks (Scan for hard-coded secrets in git repository)
        run: gitleaks detect --verbose

      - name: Run GoSec (Golang code issues)
        run: gosec ./...

      - name: Run govulncheck (Golang CLI issues)
        run: govulncheck ./...

      - name: Run unit tests
        run: |
          gotestsum --format github-actions --no-color --format-hide-empty-pkg

      - name: Build golang
        run: |
          if make -n build >/dev/null 2>&1; then
            make build
          else
            go build ${{ inputs.build-args }}
          fi                  

      - name: Run pre-deployment tests
        run: |
          if make -n pre-deploy-test >/dev/null 2>&1; then
            make pre-deploy-test
          fi

      - name: Assume Role
        uses: exzeo-devops/action-workflows/.github/actions/aws-assume-role@main
        timeout-minutes: 2 # should never take this long, if it times out, something is wrong
        with:
          role-arn: ${{ env.ROLE_ARN }}
          audience: ${{ secrets.AWS_OIDC_AUDIENCE }}    

      - name: Validate serverless configuration
        uses: exzeo-devops/action-workflows/.github/actions/validate-serverless@main

      - name: Deploy Serverless
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: exzeo-devops/action-workflows/.github/actions/deploy-serverless@main
